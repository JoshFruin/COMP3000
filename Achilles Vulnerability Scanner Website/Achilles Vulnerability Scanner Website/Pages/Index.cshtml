@page
@model IndexModel 
@*@model IEnumerable<Achilles_Vulnerability_Scanner_Website.Models.GetQSData>*@
@*@model IEnumerable<Achilles_Vulnerability_Scanner_Website.Controllers.IndexController>*@
@{
    ViewData["Title"] = "Dashboard"; 
    string[] QSTableHeaders = new string[] {"Quick Scan ID","Scan IP","Scan Vendor","Scan OS","Scan MAC","Scan Hostname","Scanned Ports","Closed Ports","Scan Completion Time","VulnerabilityScore"};
    string[] DSTableHeaders = new string[] {"Discovery ScanID","Scan IP","Scan Vendor","Scan MAC","Scan Hostname","Scanned Ports","Scan Completion Time"};
    string[] OSTableHeaders = new string[] {"OS Scan ID","Scan IP","Scan Vendor","ScanOS","IsOSOutdated","Scan MAC","Scan Hostname","Scanned Ports","Scan Completion Time","VulnerabilityScore"};
    string[] VSTableHeaders = new string[] {"Vulnerability Scan ID","Scan IP", "Scanned Key", "Scanned Key State","ScanVendor","Scan MAC","Scan Hostname","Scanned Ports","Closed Ports","Scan Completion Time","VulnerabilityScore"};
}
<head>
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<style>
html,body,h1,h2,h3,h4,h5 
</style>
</head>

<body>

<!-- !PAGE CONTENT! -->
<div class="w3-main">

  <!-- Header -->
  <header class="w3-container">
    <h3><b>Achilles Vulnerability Scanner Dashboard</b></h3>
  </header>

  <div class="w3-row-padding w3-margin-bottom">
    <div class="w3-quarter">
    </div>
  </div>

  <div class="w3-panel">
    <div class="w3-row-padding" style="margin:0 -16px">
      <div class@*="w3-twothird"*@>
        <h5>Your Vulnerability at a glimpse</h5>
        <div class="float-container">             
          <div class="float-child">
            <div id="VendorChart" style="max-width:700px;height:400px"></div>
          </div>
          <div class="float-child">
            <div id="OSVulnChart" style="max-width:700px; height:400px"></div>
          </div>
        </div>
        <div class="float-container">             
          <div class="float-child">
            <div id="VulnOvertimeChart" style="max-width:700px; height:400px"></div>
          </div>
          <div class="float-child">
            <div id="TypeOfDeviceChart" style="max-width:700px; height:400px"></div>
          </div>
        </div>
        <div class="row">

        </div>
      </div>
      <script>
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
            const data = google.visualization.arrayToDataTable([
              ['Vendor', 'Systems'],
              ['Apple',5],
              ['Microsoft',2],
              ['Linux',1],
              ['Nintendo',2],
              ['Sony',1]
            ]);

            const options = {
              title:'Vendors on your network'
            };

            const chart = new google.visualization.BarChart(document.getElementById('VendorChart'));
              chart.draw(data, options);
            }
     </script>
     <script>
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
            const data = google.visualization.arrayToDataTable([
              ['OS', 'Vulnerability Average'],
              ['Windows',6.73],
              ['Mac',6.44],
              ['Linux',6.55],
              ['Other',7.6]
            ]);

            const options = {
              title:'Average Vulnerability Score of OS'
            };

            const chart = new google.visualization.PieChart(document.getElementById('OSVulnChart'));
              chart.draw(data, options);
            }
    </script>
    <script>
        google.charts.load('current',{packages:['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
        // Set Data
        const data = google.visualization.arrayToDataTable([
          ['Price', 'Size'],
          [0,9],[1,8],[2,7],[3,8],[4,6],[5,7],
          [6,6],[7,5],[8,8],
          [9,7],[10,6]
        ]);
        // Set Options
        const options = {   
          title: 'Vulnerability Scores after each scan',
          hAxis: {title: 'Scans'},
          vAxis: {title: 'Vulnerability Score'},
          legend: 'none'
        };
        // Draw
        const chart = new google.visualization.LineChart(document.getElementById('VulnOvertimeChart'));
        chart.draw(data, options);
        }
    </script>
    <script>
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
            const data = google.visualization.arrayToDataTable([
              ['Type of Device', 'No of Devices'],
              ['PC/Home Computer',2],
              ['Laptop',3],
              ['Phone',2],
              ['Game Console',4],
              ['Smart Speaker',1],
              ['Other',4]
            ]);

            const options = {
              title:'Types of Devices on the network'
            };

            const chart = new google.visualization.PieChart(document.getElementById('TypeOfDeviceChart'));
              chart.draw(data, options);
            }
    </script>
    </div>
  </div>
  <hr>
  <div class="w3-container">
    <h5>Snippet of previous scans</h5>
    <h3>Quick Scan Data</h3>
    <div class ="table">
        <table class ="table table-bordered table-hover">
            <thead>              
                <tr>
                    @{
                        foreach (var head in QSTableHeaders)
                        {
                            <th>
                                @head
                            </th>
                        }
                    }
                </tr>
            </thead>
            @{
                if(Model.QuickData != null) //IndexModel.QSData
                {
                    foreach(var Data in Model.QuickData)
                    {
                        <tr>
                            <td>@Data.QSID</td>
                            <td>@Data.ScanIP</td>
                            <td>@Data.ScanVendor</td>
                            <td>@Data.ScanOS</td>
                            <td>@Data.ScanMAC</td>
                            <td>@Data.ScanHostname</td>
                            <td>@Data.ScanPorts</td>
                            <td>@Data.ClosedPorts</td>
                            <td>@Data.ScanCompletionTime</td> 
                            <td>@Data.VulnerabilityScore</td>
                        </tr>
                    }
                }
            }
            <tbody>

            </tbody>
        </table>

             @*<td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>*@
    </div>
    <h3>Discovery Scan Data</h3>
    <div class ="table">
        <table class ="table table-bordered table-hover">
            <thead>
                <tr>
                    @{
                        foreach (var head in DSTableHeaders)
                        {
                            <th>
                                @head
                            </th>
                        }
                    }
                </tr>
            </thead>
            @{
                if(Model.DiscoData != null) //IndexModel.QSData
                {
                    foreach(var Data in Model.DiscoData)
                    {
                        <tr>
                            <td>@Data.DiscoID</td>
                            <td>@Data.ScanIP</td>
                            <td>@Data.ScanVendor</td>
                            <td>@Data.ScanMAC</td>
                            <td>@Data.ScanHostname</td>
                            <td>@Data.ScanPorts</td>
                            <td>@Data.ScanCompletionTime</td>      
                        </tr>
                    }
                }
            }
            <tbody>

            </tbody>
        </table>
    <h3>OS Scan Data</h3>
    <div class ="table">
        <table class ="table table-bordered table-hover">
            <thead>              
                <tr>
                    @{
                        foreach (var head in OSTableHeaders)
                        {
                            <th>
                                @head
                            </th>
                        }
                    }
                </tr>
            </thead>
            @{
                if(Model.OSData != null) //IndexModel.QSData
                {
                    foreach(var Data in Model.OSData)
                    {
                        <tr>
                            <td>@Data.OSID</td>
                            <td>@Data.ScanIP</td>
                            <td>@Data.ScanVendor</td>
                            <td>@Data.ScanOS</td>
                            <td>@Data.IsOSOutdated</td>
                            <td>@Data.ScanMAC</td>
                            <td>@Data.ScanHostname</td>
                            <td>@Data.ScanPorts</td>
                            <td>@Data.ScanCompletionTime</td>     
                            <td>@Data.VulnerabilityScore</td>
                        </tr>
                    }
                }
            }
            <tbody>

            </tbody>
        </table>
        <h3>Vuln Scan Data</h3>
    <div class ="table">
        <table class ="table table-bordered table-hover">
            <thead>              
                <tr>
                    @{
                        foreach (var head in VSTableHeaders)
                        {
                            <th>
                                @head
                            </th>
                        }
                    }
                </tr>
            </thead>
            @{
                if(Model.VSData != null) //IndexModel.QSData
                {
                    foreach(var Data in Model.VSData)
                    {
                        <tr>
                            <td>@Data.VSID</td>
                            <td>@Data.ScanIP</td>
                            <td>@Data.ScannedKey</td>
                            <td>@Data.ScannedKeyState</td>
                            <td>@Data.ScanVendor</td>
                            <td>@Data.ScanMAC</td>
                            <td>@Data.ScanHostname</td>
                            <td>@Data.ScanPorts</td>
                            <td>@Data.ClosedPorts</td>
                            <td>@Data.ScanCompletionTime</td>      
                            <td>@Data.VulnerabilityScore</td>      
                        </tr>
                    }
                }
            }
            <tbody>

            </tbody>
        </table>

             @*<td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>*@
    </div>
    <div style="padding:35px;width:40%">
        
    </div>
</div>


</body>
