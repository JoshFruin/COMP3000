using Achilles_Vulnerability_Scanner_Website.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Mvc.Rendering;
using System.Diagnostics;

namespace Achilles_Vulnerability_Scanner_Website.Pages
{
    public class ScanModel : PageModel
    {

        [BindProperty]
        public RetScanModel ScanData { get; set; }

        public List<SelectListItem>? ListScan { get; set; }
        public void OnGet()
        {
            ListScan = new List<SelectListItem>
                 {
                   new SelectListItem { Value = "1", Text = "Quick Scan"},
                   new SelectListItem { Value = "2", Text = "Device Scan"},
                   new SelectListItem { Value = "3", Text = "OS Scan"},
                   new SelectListItem { Value = "4", Text = "Vulnerability Scan"},
                   new SelectListItem { Value = "5", Text = "Full Scan"}
                 };
        }
        public class RetScanModel
        {
            public int ScanValue { get; set; }
           
            public string IPValue { get; set; }

        }

        public IActionResult OnPost()
        {

            switch (ScanData.ScanValue)
            {
                case 1:

                    //Process cmd = new Process();
                    //cmd.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    //cmd.StartInfo.FileName = "cmd.exe";                  
                    //cmd.StartInfo.RedirectStandardInput = true;
                    //cmd.StartInfo.RedirectStandardOutput = true;
                    //cmd.StartInfo.CreateNoWindow = true;
                    //cmd.StartInfo.UseShellExecute = false;
                    //cmd.Start();

                    //cmd.StandardInput.WriteLine("nmap -p 1-1024 -v -sS -A");
                    //cmd.StandardInput.Flush();
                    //cmd.StandardInput.Close();
                    //cmd.WaitForExit();
                    //Console.WriteLine(cmd.StandardOutput.ReadToEnd());

                    System.Diagnostics.Process process = new System.Diagnostics.Process();
                    System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();
                    startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
                    startInfo.FileName = "cmd.exe";
                    startInfo.Arguments = "/C nmap -p 1-1024 -v -sS -A";
                    process.StartInfo = startInfo;
                    process.Start();

                    //const string ProcessExe = "sbsmutator.exe";
                    //const string OutputName = "--output-name";
                    //startInfo.FileName = ProcessExe;
                    //startInfo.Arguments = string.Format("{0} {1}", OutputName, SomeOtherConstant);

                    break;

                case 2:

                break;

                //nmap -p 1-1024 -v -sU

                case 3:

                    //nmap -p 1-1024 -O -sV
                break;

                case 4:
                    //nmap--script vuln
                break;

                case 5:
                    //nmap -p- -v -sS -sV -sC -A -O --script vuln
                    
                break;
                    
                default:

                break;

            }

            if (ScanData == null)
            {
                return Page();
            }

            return RedirectToPage("./Scan");
        }
    }

  
}
