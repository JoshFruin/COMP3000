using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using MySql.Data.MySqlClient;
using System.Data;
using System.Net;

namespace Achilles_Vulnerability_Scanner_Website.Pages
{
    public class IndexModel : PageModel
    {
        private readonly ILogger<IndexModel> _logger;

        public IndexModel(ILogger<IndexModel> logger)
        {
            _logger = logger;
        }

        public List<QSData> QuickData { get; set; }
        public List<DSData> DiscoData { get; set; }
        public List<OSDataList> OSData { get; set; }
        public List<VulnData> VSData { get; set; }

        public class QSData 
        {
            public string QSID { get; set; }
            public string ScanIP { get; set; }
            public string ScanVendor { get; set; } 
            public string ScanOS { get; set; }
            public string ScanMAC { get; set; } 
            public string ScanHostname { get; set; }
            public string ScanPorts { get; set; }
            public string ScanPortServices { get; set; } 
            public string ClosedPorts { get; set; } 
            public string ScanCompletionTime { get; set; }
            public string VulnerabilityScore { get; set; }
        }
        public class DSData
        {
            public string DiscoID { get; set; }
            public string ScanIP { get; set; }
            public string ScanVendor { get; set; }
            public string ScanMAC { get; set; }
            public string ScanHostname { get; set; }
            public string ScanPorts { get; set; }
            public string ScanCompletionTime { get; set; }
            public string VulnerabilityScore { get; set; }
        }
        public class OSDataList
        {
            public string OSID { get; set; }
            public string ScanIP { get; set; }
            public string ScanVendor { get; set; }
            public string ScanOS { get; set; }
            public string IsOSOutdated { get; set; }
            public string ScanMAC { get; set; }
            public string ScanHostname { get; set; }
            public string ScanPorts { get; set; }
            public string ScanCompletionTime { get; set; }
            public string VulnerabilityScore { get; set; }
        }
        public class VulnData
        {
            public string VSID { get; set; }
            public string ScanIP { get; set; }
            public string ScannedVulnerabilities { get; set; }
            public string ScannedKey { get; set; }
            public string ScannedKeyState { get; set; }
            public string ScanVendor { get; set; }
            public string ScanMAC { get; set; }
            public string ScanHostname { get; set; }
            public string ScanPorts { get; set; }
            public string ScanPortServices { get; set; }
            public string ClosedPorts { get; set; }
            public string ScanCompletionTime { get; set; }
            public string VulnerabilityScore { get; set; }
        }
        public void OnGet()
        {
            OnPost();
        }
        public IActionResult OnPost()
        {
            using (MySqlConnection conn = new MySqlConnection("server=localhost;database=scannerdbmk3;uid=root;pwd=C4bbages!;AllowUserVariables=True;"))
            {
                try
                {
                    conn.Open();

                    using (MySqlCommand cmd = new MySqlCommand("SELECT * FROM scannerdbmk3.quickscandata ORDER BY QSID DESC LIMIT 20", conn))
                    using (var reader = cmd.ExecuteReader())
                    {
                        QuickData = new List<QSData>();
                        while (reader.Read())
                        {
                            QuickData.Add(new QSData()
                            {
                                QSID = reader["QSID"].ToString(),
                                ScanIP = reader["ScanIP"].ToString(),
                                ScanVendor = reader["ScanVendor"].ToString(),
                                ScanOS = reader["ScanOS"].ToString(),
                                ScanMAC = reader["ScanMAC"].ToString(),
                                ScanHostname = reader["ScanHostname"].ToString(),
                                ScanPorts = reader["ScanPorts"].ToString(),
                                ClosedPorts = reader["ClosedPorts"].ToString(),
                                ScanCompletionTime = reader["ScanCompletionTime"].ToString(),
                                VulnerabilityScore = reader["VulnerabilityScore"].ToString(),
                            });
                        }
                    }

                    using (MySqlCommand cmd = new MySqlCommand("SELECT * FROM scannerdbmk3.discoscandata ORDER BY DiscoID DESC LIMIT 20", conn))
                    using (var reader = cmd.ExecuteReader())
                    {
                        DiscoData = new List<DSData>();
                        while (reader.Read())
                        {
                            DiscoData.Add(new DSData()
                            {
                                DiscoID = reader["DiscoID"].ToString(),
                                ScanIP = reader["ScanIP"].ToString(),
                                ScanVendor = reader["ScanVendor"].ToString(),
                                ScanMAC = reader["ScanMAC"].ToString(),
                                ScanHostname = reader["ScanHostname"].ToString(),
                                ScanPorts = reader["ScanPorts"].ToString(),
                                ScanCompletionTime = reader["ScanCompletionTime"].ToString(),
                                VulnerabilityScore = reader["VulnerabilityScore"].ToString(),
                            });
                        }
                    }
                    using (MySqlCommand cmd = new MySqlCommand("SELECT * FROM scannerdbmk3.oscandata ORDER BY OSID DESC LIMIT 20", conn))
                    using (var reader = cmd.ExecuteReader())
                    {
                        OSData = new List<OSDataList>();
                        while (reader.Read())
                        {
                            OSData.Add(new OSDataList()
                            {
                                OSID = reader["OSID"].ToString(),
                                ScanIP = reader["ScanIP"].ToString(),
                                ScanVendor = reader["ScanVendor"].ToString(),
                                ScanOS = reader["ScanOS"].ToString(),
                                IsOSOutdated = reader["IsOSOutdated"].ToString(),
                                ScanMAC = reader["ScanMAC"].ToString(),
                                ScanHostname = reader["ScanHostname"].ToString(),
                                ScanPorts = reader["ScanPorts"].ToString(),
                                ScanCompletionTime = reader["ScanCompletionTime"].ToString(),
                                VulnerabilityScore = reader["VulnerabilityScore"].ToString(),
                            });
                        }
                    }
                    using (MySqlCommand cmd = new MySqlCommand("SELECT * FROM scannerdbmk3.vulnscandata ORDER BY VSID DESC LIMIT 20", conn))
                    using (var reader = cmd.ExecuteReader())
                    {
                        VSData = new List<VulnData>();
                        while (reader.Read())
                        {
                            VSData.Add(new VulnData()
                            {
                                VSID = reader["VSID"].ToString(),
                                ScanIP = reader["ScanIP"].ToString(),
                                ScannedKey = reader["ScannedKey"].ToString(),
                                ScannedKeyState = reader["ScannedKeyState"].ToString(),
                                ScanVendor = reader["ScanVendor"].ToString(),
                                ScanMAC = reader["ScanMAC"].ToString(),
                                ScanHostname = reader["ScanHostname"].ToString(),
                                ScanPorts = reader["ScanPorts"].ToString(),
                                ClosedPorts = reader["ClosedPorts"].ToString(),
                                ScanCompletionTime = reader["ScanCompletionTime"].ToString(),
                                VulnerabilityScore = reader["VulnerabilityScore"].ToString(),
                            });
                        }
                    }
                }               
                catch (Exception ex)
                {
                    throw ex;
                }              
            }
            return RedirectToPage("./Index");
        }
    }
}